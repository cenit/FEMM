%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (Word2TeX)
%%Title: (C:\download\bela10src\manual\latex\belaman2.eps)
%%CreationDate: (Tue Sep 02 09:46:28 2003)
%%BoundingBox: 0 0 114 21
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 115 22
userdict begin
%%BeginData:
DisplayImage
0 0
115 22
12.000000
115 22
1
0
0
7
000000
0000ff
00ff00
808080
dfdfdf
c0c0c0
ffffff
001606160000061500000615000006150001031304000601041303000000060004130300
000006000413030000000600041303000001030005000600050006000500060005000600
050006000500060005000600050006000500060005000400060104000512030000000600
040005120300000006000400051203000000060004000512030000010300060005000600
050006000500060005000600050006000500060005000600050006000500060004000601
040005120300000006000400051203000000060004000512030000000600040005120300
000103000500060005000600050006000500060005000600050006000500060005000600
050006000500040006010400051203000000060004000512030000000600040005120300
000006000400050500000103000005060300000103000600050006000500060005000600
050006000500060005000600050006000500060005000600040006010400050900020505
030000000600040005120300000006000400050502050506030000000600040005050100
050002010500010005060300000103000500060005000600050006000500060005000600
050006000500060005000600050006000500040006010400050900000100000005050300
000006000400051203000000060004000504020005050200050503000000060004000505
000005000201050000000506030000010300060005000600050006000500060005000600
050006000500060005000600050006000500060004000601040005090100000105050300
000006000400050601030507030000000600040005030200050702000504030000000600
040005040100050501000505030000010300050006000500060005000600050006000500
060005000600050006000500060005000600050004000601040005080100050803000000
060004000501000201010503010105050300000006000400050202000509020005030300
000006000400050100000100000005010103050100000100000005020300000103000600
050006000500060005000600000406000500060005000600050006000400060104000508
010005080300000006000400050100000500010005060100050503000000060004000502
020005020203050202000503030000000600040005010100050201000503010005020100
050203000001030005000600050006000500060005000000050006000500000005000600
050006000500060005000400060104000507010005090300000006000400050100020506
010005050300000006000400050202000502020005010200050202000503030000000600
040005010100050201000500020105000100050201000502030000010300060005000600
050006000500060000000600050006000000060005000600050006000500060004000601
040005060100050a0300000006000400050c010005040300000006000400050202000502
020005010200050202000503030000000600040005010100050201000500020105000100
050201000502030000010300050006000500060005000600050000000500060005000000
050006000500060005000600050004000601040005050100050b0300000006000400050b
000001000000050303000000060004000502020005020203050202000503030000000600
040005010100050201000503010005020100050203000001030006000500060005000600
050006000004060005000600050006000500060004000601040005050100050b03000000
06000400050b000001000000050303000000060004000502020005090200050303000000
060004000501000001000000050101030501000001000000050203000001030005000600
050006000500060005000600050006000500060005000600050006000500060005000400
06010400050200010100050c0300000006000400050b0002050303000000060004000503
020005070200050403000000060004000504010005050100050503000001030006000500
060005000600050006000500060005000600050006000500060005000600050006000400
060104000502000001000000050c03000000060004000512030000000600040005040200
050502000505030000000600040005050000050300000506030000010300050006000500
060005000600050006000500060005000600050006000500060005000600050004000601
040005020002050c03000000060004000512030000000600040005050205050603000000
060004000505010005030100050603000001030006000500060005000600050006000500
060005000600050006000500060005000600050006000400060104000512030000000600
040005120300000006000400051203000000060004000505000001030000050603000001
030005000600050006000500060005000600050006000500060005000600050006000500
060005000400060104000512030000000600040005120300000006000400051203000000
060004000512030000010300060005000600050006000500060005000600050006000500
060005000600050006000500060004000601040005120300000006000400051203000000
060004000512030000000600040005120300000104140601031400000600031400000600
03140000060003140617005a
%%EndData
end
%%PageTrailer
%%Trailer
%%EOF
