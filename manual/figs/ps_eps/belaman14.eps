%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (Word2TeX)
%%Title: (C:\download\bela10src\manual\latex\belaman14.eps)
%%CreationDate: (Tue Sep 02 09:46:28 2003)
%%BoundingBox: 0 0 68 21
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 69 22
userdict begin
%%BeginData:
DisplayImage
0 0
69 22
12.000000
69 22
1
0
0
7
000000
00ff00
848484
dedede
c6c6c6
ff0000
ffffff
001606160000061500010213030006010313020000000600031302000001020006000400
060004000600040006000400060004000600040006000400060004000600040006000300
060103000412020000000600030004120200000102000400060004000600040006000400
060004000600040006000400060004000600040006000400030006010300041202000000
060003000412020000010200060004000600040006000400060004000600040006000400
060004000600040006000400060003000601030004120200000006000300041202000001
020004000600040006000400060004000600040006000400060004000600040006000400
06000400030006010300040b000204030200000006000300040300020405000204020200
000102000600040006000400060004000600040006000400060004000600040006000400
060004000600030006010300040b00000500000004030200000006000300040300000400
000001050000040000000402020000010200040006000400060004000600040006000400
0600040006000400060004000600040006000400030006010300040b0500000104030200
000006000300040300020105000204020200000102000600040006000400060004000600
040006000400060004000600040006000400060004000600030006010300040a05000406
020000000600030004040109040302000001020004000600040006000400060004000004
0400060004000600040006000400030006010300040a0500040602000000060003000404
010904030200000102000600040006000400060004000600000006000400060000000600
040006000400060004000600030006010300040905000407020000000600030004040109
040302000001020004000600040006000400060004000000040006000400000004000600
040006000400060004000300060103000408050004080200000006000300040401090403
020000010200060004000600040006000400060000000600040006000000060004000600
040006000400060003000601030004070500040902000000060003000404010904030200
000102000400060004000600040006000400000404000600040006000400060004000300
060103000407050004090200000006000300040401090403020000010200060004000600
040006000400060004000600040006000400060004000600040006000400060003000601
0300040400010500040a0200000006000300040300020105000204020200000102000400
060004000600040006000400060004000600040006000400060004000600040006000400
0300060103000404000005000000040a0200000006000300040300000400000001050000
040000000402020000010200060004000600040006000400060004000600040006000400
060004000600040006000400060003000601030004040002040a02000000060003000403
000204050002040202000001020004000600040006000400060004000600040006000400
060004000600040006000400060004000300060103000400010004100200000006000300
040001000410020000010200060004000600040006000400060004000600040006000400
060004000600040006000400060003000601030004120200000006000300041202000001
020004000600040006000400060004000600040006000400060004000600040006000400
060004000300060103000412020000000600030004120200000103140601021400000600
02140617002c
%%EndData
end
%%PageTrailer
%%Trailer
%%EOF
