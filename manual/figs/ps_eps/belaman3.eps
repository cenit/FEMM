%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (Word2TeX)
%%Title: (C:\download\bela10src\manual\latex\belaman3.eps)
%%CreationDate: (Tue Sep 02 09:46:28 2003)
%%BoundingBox: 0 0 183 21
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 184 22
userdict begin
%%BeginData:
DisplayImage
0 0
184 22
12.000000
184 22
1
0
0
9
000000
000084
00ffff
dedede
c6c6c6
848484
840084
ffffff
0000ff
071600000715000007150000071500000715000007150000071500000715070103130500
000007000313050000000700031305000000070003130500000007000313050000000700
031305000000070003130500000007000313050007010300041205000000070003000412
050000000700030004120500000007000300041205000000070003000412050000000700
030004120500000007000300041205000000070003000412050007010300041205000000
070003000412050000000700030004020509040505000000070003000403050804050500
000007000300041205000000070003000412050000000700030004120500000007000300
041205000701030004060603040705000000070003000412050000000700030004020500
070705010404050000000700030004030500070605010404050000000700030004120500
000007000300040806010407050000000700030004060603040705000000070003000412
050007010300040606030500040605000000070003000412050000000700030004020500
070705000700050004030500000007000300040305000706050007000500040305000000
0700030004060600040a0500000007000300040706030406050000000700030004060603
050004060500000007000300040906000407050007010300040606030500040605000000
070003000412050000000700030004020500070700030402050000000700030004030500
070600030402050000000700030004050601050004090500000007000300040606050405
050000000700030004060603050004060500000007000300040906010406050007010300
040606030500040605000000070003000412050000000700030004020500070904000000
040205000000070003000403050100000400070504000000040205000000070003000404
060205000409050000000700030004050607040405000000070003000406060305000406
05000000070003000409060204050500070103000402060b040305000000070003000401
060b04040500000007000300040205000709040000000402050000000700030004020500
07000200070000000400070404000000040205000000070003000403060a040305000000
070003000404060904030500000007000300040606030500040605000000070003000402
060a04040500070103000402060b0500040205000000070003000401060b050004030500
000007000300040205000709040000000402050000000700030004010500070002000700
0200040000000400070304000000040205000000070003000402060b0500040205000000
070003000407060305030402050000000700030004060603050004060500000007000300
0402060b04030500070103000402060b0500040205000000070003000401060b05000403
050000000700030004020500070904000000040205000000070003000401050002000700
02000400020000000400070304000000040205000000070003000402060b050004020500
000007000300040706030500040505000000070003000406060305000406050000000700
03000402060b050004020500070103000402060b0500040205000000070003000401060b
050004030500000007000300040205000709040000000402050000000700030004010500
0700020004000200040000000400070304000000040205000000070003000403060a0500
040205000000070003000407060305000405050000000700030004030609040405000000
070003000402060a05000403050007010300040305020603050404020500000007000300
0402050b0403050000000700030004020500070904000000040205000000070003000402
050004000200040000000501040007020400000004020500000007000300040406020507
040205000000070003000407060305000405050000000700030004040607050004040500
000007000300040305050602050004040500070103000406060305000406050000000700
030004120500000007000300040205000709040000000402050000000700030004030500
000105000400080104000701040000000402050000000700030004050601050004090500
000007000300040706030500040505000000070003000405060505000405050000000700
030004090601050004050500070103000406060305000406050000000700030004120500
000007000300040205000709040000000402050000000700030004030500070201000200
080104000700040000000402050000000700030004060600050004090500000007000300
040706030500040505000000070003000406060305000406050000000700030004090600
050004060500070103000406060305000406050000000700030004120500000007000300
040205000709040000000402050000000700030004030500040301000200080104010000
040205000000070003000407050004090500000007000300040706030500040505000000
070003000407060105000407050000000700030004090500040705000701030004070503
040605000000070003000412050000000700030004020500070904000000040205000000
070003000403000501000200080100010402050000000700030004120500000007000300
040805030405050000000700030004080500040805000000070003000412050007010300
04120500000007000300041205000000070003000402000c04020500000007000300040a
010002000800000004030500000007000300041205000000070003000412050000000700
030004120500000007000300041205000701030004120500000007000300041205000000
070003000412050000000700030004120500000007000300041205000000070003000412
050000000700030004120500000007000300041205000701030004120500000007000300
041205000000070003000412050000000700030004120500000007000300041205000000
070003000412050000000700030004120500000007000300041205000701051400000700
051400000700051400000700051400000700051400000700051400000700051400000700
051400b7
%%EndData
end
%%PageTrailer
%%Trailer
%%EOF
