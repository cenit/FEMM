%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (Word2TeX)
%%Title: (C:\download\bela10src\manual\latex\belaman16.eps)
%%CreationDate: (Tue Sep 02 09:46:28 2003)
%%BoundingBox: 0 0 68 21
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 69 22
userdict begin
%%BeginData:
DisplayImage
0 0
69 22
12.000000
69 22
1
0
0
6
000000
dedede
c6c6c6
848484
ffffff
0000ff
001604160000041500010313010004010113030000000400011303000001030004000200
040002000400020004000200040002000400020004000200040002000400020004000100
040101000212030000000400010002120300000103000200040002000400020004000200
040002000400020004000200040002000400020004000200010004010100021203000000
040001000208000002020000020403000001030004000200040002000400020004000200
040002000400020004000200040002000400020004000100040101000212030000000400
0100020c0000020403000001030002000400020004000500040002000400050004000200
04000500040002000400050004000200010004010100020d000002030300000004000100
020200010200000102000000020000020204030000010300040002000400020004000200
0400020004000200040002000400020004000200040002000400010004010100020c0000
020403000000040001000201000002000000020000000201000002000000020000000204
030000010300020004000200040002000400020004000200040002000400020004000200
0400020004000200010004010100020b0000020503000000040001000201000002000000
020000000201000002000000020000000204030000010300040002000400020004000200
040002000400020004000200040002000400020004000200040001000401010002070000
020100000206030000000400010002010002020000000201000002000002020403000001
030002000400020004000500040002000400050004000200040005000400020004000500
0400020001000401010002070000020000000207030000000400010002030000020d0300
000103000400020004000200040002000400020004000200040002000400020004000200
040002000400010004010100020700010208030000000400010002010001020e03000001
030002000400020004000200040002000400020004000200040002000400020004000200
04000200010004010100020700030206030000000400010002050000020b030000010300
040002000400020004000200040002000400020004000200040002000400020004000200
040001000401010002040501020b03000000040001000212030000010300020004000200
040005000400020004000500040002000400050004000200040005000400020001000401
010002040501020b03000000040001000202000102000000020000020200000102040300
000103000400020004000200040002000400020004000200040002000400020004000200
040002000400010004010100021203000000040001000201000002020000020100000200
000202040300000103000200040002000400020004000200040002000400020004000200
040002000400020004000200010004010100021203000000040001000203000002000000
020000000201000002060300000103000400020004000200040002000400020004000200
040002000400020004000200040002000400010004010100021203000000040001000201
000102010000020000020200000102040300000103000200040002000400050004000200
040005000400020004000500040002000400050004000200010004010100021203000000
040001000212030000010300040002000400020004000200040002000400020004000200
040002000400020004000200040001000401010002120300000004000100021203000001
030002000400020004000200040002000400020004000200040002000400020004000200
040002000100040101000212030000000400010002120300000101140401031400000400
03140417002c
%%EndData
end
%%PageTrailer
%%Trailer
%%EOF
